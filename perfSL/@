#include <stdio.h>
#include <stdlib.h>
#include <float.h>
#include <likwid.h>
#include "eliminacaoGauss.h"
#include "sislin.h"
#include "utils.h"
#include "gaussSeidel.h"

int main(){

    SistLinear_t *mtx_eg = lerSisLin();
		SistLinear_t *mtx_gs = mtx_eg;
    printf("MATRIZ ORIGINAL\n");
    prnSisLin(mtx_eg);


    triangulariza(mtx_eg);
    printf("MATRIZ TRIANGULARIZADA\n");
    prnSisLin(mtx_eg);

    retrosubst(mtx_eg, mtx_eg->b);
    //printf("MATRIZ DEPOIS DA RETROSUBSTITUIÇÃO\n");
    //prnSisLin(mtx_eg);
    printf("RESULTADO\n");
    prnVetor(mtx_eg->b, mtx_eg->n);


    real_t *X = malloc(sizeof(real_t) * mtx_gs->n);
    if (!X) {return 1;}  
    for(int i = 0; i < mtx_gs->n; i++){
        X[i] = 0.0;
    } 

    real_t norma;
    if (gaussSeidel(mtx_gs, X, DBL_EPSILON, 60, &norma)) {return 1;}

    printf("MATRIZ DEPOIS DE GAUSS-SEIDEL\n");
    prnSisLin(mtx_gs);
    printf("RESULTADO\n");
    prnVetor(X, mtx_gs->n);

		liberaSisLin(mtx_eg);
		liberaSisLin(mtx_gs);
		return 0;
}
